package com.blood.bank.service_gateway.custom.jwt;
import org.springframework.cloud.gateway.filter.GatewayFilter;
import org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory;
import org.springframework.stereotype.Component;
 
@Component
public class JwtGatewayFilter extends AbstractGatewayFilterFactory<JwtGatewayFilter.Config> {
 
    public JwtGatewayFilter() {
        super(Config.class);
    }
 
    @Override
    public GatewayFilter apply(Config config) {
        return (exchange, chain) -> {
            // Extract the JWT token from the Authorization header
            String authHeader = exchange.getRequest().getHeaders().getFirst("Authorization");
            if (authHeader != null && authHeader.startsWith("Bearer ")) {
                String jwtToken = authHeader.substring(7);
                // Forward the JWT token to the downstream service
                exchange.getRequest().mutate()
                        .header("Authorization", "Bearer " + jwtToken)
                        .build();
            System.out.println("authHeader : "+jwtToken);
        }
            return  chain.filter(exchange);
        };
    }
 
    public String getName() {
        return "JwtGatewayFilter";
    }
 
    public static class Config {
        // You can add configuration properties here if needed
    }
}
