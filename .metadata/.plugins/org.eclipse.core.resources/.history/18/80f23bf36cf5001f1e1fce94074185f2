package com.emp.security.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.emp.security.proxy.EmployeeProxy;
import com.emp.security.proxy.LoginRequest;
import com.emp.security.proxy.LoginResponse;
import com.emp.security.services.EmpService;
import com.emp.security.utils.ApiResponseMessage;

import jakarta.validation.Valid;

@RestController
public class EmpController {

	@Autowired
	private EmpService empService;
	
	// save-Data
	@PostMapping("/saveEmployee")
	public ResponseEntity<EmployeeProxy> saveData(@Valid @RequestBody EmployeeProxy employeeProxy){
		EmployeeProxy saveData = empService.saveData(employeeProxy);
		return new ResponseEntity<EmployeeProxy>(saveData, HttpStatus.CREATED);
	}
	
	// get Employee By Id
	@GetMapping("/getById/{id}")
	public ResponseEntity<EmployeeProxy> getDataById(@PathVariable String id){
		EmployeeProxy employeeProxy = empService.getById(id);
		return new ResponseEntity<EmployeeProxy>(employeeProxy, HttpStatus.OK);
	}
	
	// get All Employee
	@GetMapping("/getAllEmployee")
	public ResponseEntity<List<EmployeeProxy>> getAllData(){
		List<EmployeeProxy> list = empService.getAll();
		return new ResponseEntity<>(list, HttpStatus.OK);
	}
	
	// update Employee
	@PutMapping("/updateEmployee/{id}")
	public ResponseEntity<EmployeeProxy> getEmployeeData(@Valid @PathVariable String id,@RequestBody EmployeeProxy employeeProxy){
		EmployeeProxy updatedEmployee = empService.updatedEmployee(id, employeeProxy);
		return new ResponseEntity<>(updatedEmployee, HttpStatus.OK);
	}
	
	// delete Employee by Id
	@DeleteMapping("/deleteEmployee/{id}")
	public ResponseEntity<ApiResponseMessage> deleteEmployeeById(@PathVariable String id){
		empService.deleteEmpById(id);
		ApiResponseMessage message = ApiResponseMessage.builder().message("Employee is deleted Successfully !!").success(true).status(HttpStatus.OK).build();
		return new ResponseEntity<>(message, HttpStatus.OK);
	}
	
	// delete All Employee
	@DeleteMapping("/deleteAllEmployee")
	public ResponseEntity<?> deleteAllEmployee(){
		empService.deleteAllEmp();
		ApiResponseMessage message = ApiResponseMessage.builder().message("All Employee is deleted Successfully !!").success(true).status(HttpStatus.OK).build();
		return new ResponseEntity<>(message, HttpStatus.OK);
	}
	
	// WelComePage
	@GetMapping("/home")
	public ResponseEntity<?> home(){
		return new ResponseEntity<>("Welcome to home page !!", HttpStatus.OK);
	}
	
	// Login
	@PostMapping("/login")
	public ResponseEntity<LoginResponse> login(@Valid @RequestBody LoginRequest request){
		return new ResponseEntity<>(empService.login(request), HttpStatus.ACCEPTED);
	}
}
